{
  "resourceType": "Library",
  "id": "library-exm108-FHIR3",
  "version": "7.4.000",
  "name": "EXM108_FHIR3",
  "status": "active",
  "experimental": true,
  "type": {
    "coding": [
      {
        "system": "http://hl7.org/fhir/codesystem-library-type.html",
        "code": "logic-library"
      }
    ]
  },
  "relatedArtifact": [
    {
      "type": "depends-on",
      "resource": {
        "reference": "Library/library-fhir-helpers"
      }
    },
    {
      "type": "depends-on",
      "resource": {
        "reference": "Library/library-mat-global-common-functions-FHIR3"
      }
    },
    {
      "type": "depends-on",
      "resource": {
        "reference": "Library/library-vte-icu-FHIR3"
      }
    },
    {
      "type": "depends-on",
      "resource": {
        "reference": "Library/library-supplemental-data-elements-FHIR3"
      }
    }
  ],
  "dataRequirement": [
    {
      "type": "Encounter",
      "codeFilter": [
        {
          "path": "type",
          "valueSetString": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.666.5.307"
        }
      ]
    },
    {
      "type": "Encounter",
      "codeFilter": [
        {
          "path": "type",
          "valueSetString": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.117.1.7.1.292"
        }
      ]
    },
    {
      "type": "Condition",
      "codeFilter": [
        {
          "path": "id"
        }
      ]
    },
    {
      "type": "Condition",
      "codeFilter": [
        {
          "path": "id"
        }
      ]
    },
    {
      "type": "Location",
      "codeFilter": [
        {
          "path": "id"
        }
      ]
    },
    {
      "type": "Encounter",
      "codeFilter": [
        {
          "path": "type",
          "valueSetString": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113762.1.4.1111.143"
        }
      ]
    },
    {
      "type": "Encounter",
      "codeFilter": [
        {
          "path": "type",
          "valueSetString": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.117.1.7.1.292"
        }
      ]
    },
    {
      "type": "Encounter",
      "codeFilter": [
        {
          "path": "type",
          "valueSetString": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.666.5.307"
        }
      ]
    },
    {
      "type": "Encounter",
      "codeFilter": [
        {
          "path": "type",
          "valueSetString": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.117.1.7.1.292"
        }
      ]
    },
    {
      "type": "Condition",
      "codeFilter": [
        {
          "path": "id"
        }
      ]
    },
    {
      "type": "Condition",
      "codeFilter": [
        {
          "path": "id"
        }
      ]
    },
    {
      "type": "Location",
      "codeFilter": [
        {
          "path": "id"
        }
      ]
    },
    {
      "type": "Encounter",
      "codeFilter": [
        {
          "path": "type",
          "valueSetString": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113762.1.4.1111.143"
        }
      ]
    },
    {
      "type": "Encounter",
      "codeFilter": [
        {
          "path": "type",
          "valueSetString": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.117.1.7.1.292"
        }
      ]
    },
    {
      "type": "Coverage",
      "codeFilter": [
        {
          "path": "type",
          "valueSetString": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.114222.4.11.3591"
        }
      ]
    },
    {
      "type": "Patient"
    },
    {
      "type": "Condition",
      "codeFilter": [
        {
          "path": "code",
          "valueSetString": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.117.1.7.1.263"
        }
      ]
    },
    {
      "type": "Condition",
      "codeFilter": [
        {
          "path": "code",
          "valueSetString": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.117.1.7.1.279"
        }
      ]
    },
    {
      "type": "Condition",
      "codeFilter": [
        {
          "path": "code",
          "valueSetString": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.117.1.7.1.264"
        }
      ]
    },
    {
      "type": "Encounter",
      "codeFilter": [
        {
          "path": "type",
          "valueSetString": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.117.1.7.1.292"
        }
      ]
    },
    {
      "type": "DeviceUseStatement",
      "codeFilter": [
        {
          "path": "code",
          "valueSetString": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.117.1.7.1.230"
        }
      ]
    },
    {
      "type": "DeviceUseStatement",
      "codeFilter": [
        {
          "path": "code",
          "valueSetString": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.117.1.7.1.214"
        }
      ]
    },
    {
      "type": "DeviceUseStatement",
      "codeFilter": [
        {
          "path": "code",
          "valueSetString": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.117.1.7.1.256"
        }
      ]
    },
    {
      "type": "DeviceRequest",
      "codeFilter": [
        {
          "path": "code",
          "valueSetString": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.117.1.7.1.230"
        }
      ]
    },
    {
      "type": "DeviceRequest",
      "codeFilter": [
        {
          "path": "code",
          "valueSetString": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.117.1.7.1.214"
        }
      ]
    },
    {
      "type": "DeviceRequest",
      "codeFilter": [
        {
          "path": "code",
          "valueSetString": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.117.1.7.1.256"
        }
      ]
    },
    {
      "type": "MedicationAdministration",
      "codeFilter": [
        {
          "path": "medication",
          "valueSetString": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113762.1.4.1045.39"
        }
      ]
    },
    {
      "type": "MedicationAdministration",
      "codeFilter": [
        {
          "path": "medication",
          "valueSetString": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.117.1.7.1.219"
        }
      ]
    },
    {
      "type": "MedicationAdministration",
      "codeFilter": [
        {
          "path": "medication",
          "valueSetString": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.117.1.7.1.211"
        }
      ]
    },
    {
      "type": "MedicationAdministration",
      "codeFilter": [
        {
          "path": "medication",
          "valueSetString": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.117.1.7.1.232"
        }
      ]
    },
    {
      "type": "MedicationRequest",
      "codeFilter": [
        {
          "path": "medication",
          "valueSetString": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113762.1.4.1045.39"
        }
      ]
    },
    {
      "type": "MedicationRequest",
      "codeFilter": [
        {
          "path": "medication",
          "valueSetString": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.117.1.7.1.219"
        }
      ]
    },
    {
      "type": "MedicationRequest",
      "codeFilter": [
        {
          "path": "medication",
          "valueSetString": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.117.1.7.1.211"
        }
      ]
    },
    {
      "type": "MedicationRequest",
      "codeFilter": [
        {
          "path": "medication",
          "valueSetString": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.117.1.7.1.232"
        }
      ]
    },
    {
      "type": "Procedure",
      "codeFilter": [
        {
          "path": "code",
          "valueSetString": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.666.5.1743"
        }
      ]
    },
    {
      "type": "Procedure",
      "codeFilter": [
        {
          "path": "code",
          "valueSetString": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.666.5.1743"
        }
      ]
    },
    {
      "type": "Procedure",
      "codeFilter": [
        {
          "path": "code",
          "valueSetString": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.117.1.7.1.255"
        }
      ]
    },
    {
      "type": "Procedure",
      "codeFilter": [
        {
          "path": "code",
          "valueSetString": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.117.1.7.1.257"
        }
      ]
    },
    {
      "type": "Procedure",
      "codeFilter": [
        {
          "path": "code",
          "valueSetString": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.117.1.7.1.258"
        }
      ]
    },
    {
      "type": "Procedure",
      "codeFilter": [
        {
          "path": "code",
          "valueSetString": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.117.1.7.1.259"
        }
      ]
    },
    {
      "type": "Procedure",
      "codeFilter": [
        {
          "path": "code",
          "valueSetString": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.117.1.7.1.260"
        }
      ]
    },
    {
      "type": "Procedure",
      "codeFilter": [
        {
          "path": "code",
          "valueSetString": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.117.1.7.1.261"
        }
      ]
    },
    {
      "type": "Procedure",
      "codeFilter": [
        {
          "path": "code",
          "valueSetString": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.117.1.7.1.272"
        }
      ]
    },
    {
      "type": "ProcedureRequest",
      "codeFilter": [
        {
          "path": "code",
          "valueSetString": "http://cts.nlm.nih.gov/fhir/ValueSet/1.3.6.1.4.1.33895.1.3.0.45"
        }
      ]
    },
    {
      "type": "Procedure",
      "codeFilter": [
        {
          "path": "code",
          "valueSetString": "http://cts.nlm.nih.gov/fhir/ValueSet/1.3.6.1.4.1.33895.1.3.0.45"
        }
      ]
    },
    {
      "type": "Procedure",
      "codeFilter": [
        {
          "path": "code",
          "valueSetString": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.666.5.1743"
        }
      ]
    },
    {
      "type": "MedicationAdministration",
      "codeFilter": [
        {
          "path": "medication",
          "valueSetString": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113762.1.4.1045.39"
        }
      ]
    },
    {
      "type": "MedicationAdministration",
      "codeFilter": [
        {
          "path": "medication",
          "valueSetString": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.117.1.7.1.219"
        }
      ]
    },
    {
      "type": "MedicationAdministration",
      "codeFilter": [
        {
          "path": "medication",
          "valueSetString": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.117.1.7.1.211"
        }
      ]
    },
    {
      "type": "MedicationAdministration",
      "codeFilter": [
        {
          "path": "medication",
          "valueSetString": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.117.1.7.1.232"
        }
      ]
    },
    {
      "type": "DeviceUseStatement",
      "codeFilter": [
        {
          "path": "code",
          "valueSetString": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.117.1.7.1.214"
        }
      ]
    },
    {
      "type": "DeviceUseStatement",
      "codeFilter": [
        {
          "path": "code",
          "valueSetString": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.117.1.7.1.230"
        }
      ]
    },
    {
      "type": "DeviceUseStatement",
      "codeFilter": [
        {
          "path": "code",
          "valueSetString": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.117.1.7.1.256"
        }
      ]
    },
    {
      "type": "Procedure",
      "codeFilter": [
        {
          "path": "code",
          "valueSetString": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.666.5.1743"
        }
      ]
    },
    {
      "type": "MedicationAdministration",
      "codeFilter": [
        {
          "path": "medication",
          "valueSetString": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.117.1.7.1.134"
        }
      ]
    },
    {
      "type": "Procedure",
      "codeFilter": [
        {
          "path": "code",
          "valueSetString": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.666.5.1743"
        }
      ]
    },
    {
      "type": "MedicationAdministration",
      "codeFilter": [
        {
          "path": "medication",
          "valueSetString": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.117.1.7.1.134"
        }
      ]
    },
    {
      "type": "Condition",
      "codeFilter": [
        {
          "path": "code",
          "valueSetString": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.117.1.7.1.202"
        }
      ]
    },
    {
      "type": "Condition",
      "codeFilter": [
        {
          "path": "code",
          "valueSetString": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.117.1.7.1.279"
        }
      ]
    },
    {
      "type": "Procedure",
      "codeFilter": [
        {
          "path": "code",
          "valueSetString": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.117.1.7.1.259"
        }
      ]
    },
    {
      "type": "Procedure",
      "codeFilter": [
        {
          "path": "code",
          "valueSetString": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.117.1.7.1.261"
        }
      ]
    },
    {
      "type": "Observation",
      "codeFilter": [
        {
          "path": "code"
        }
      ]
    },
    {
      "type": "Procedure",
      "codeFilter": [
        {
          "path": "code",
          "valueSetString": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.666.5.1743"
        }
      ]
    },
    {
      "type": "Procedure",
      "codeFilter": [
        {
          "path": "code",
          "valueSetString": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.666.5.1743"
        }
      ]
    }
  ],
  "content": [
    {
      "contentType": "text/cql",
      "data": ""
    },
    {
      "contentType": "application/elm+xml",
      "data": ""
    }
  ]
}
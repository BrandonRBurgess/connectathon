{
  "resourceType": "Library",
  "id": "library-EXM105-FHIR3-7.0.0",
  "text": {
    "status": "generated",
    "div": "<div xmlns=\"http://www.w3.org/1999/xhtml\"><table class=\"grid dict\"><tr><th scope=\"row\"><b>Id: </b></th><td style=\"padding-left: 25px; padding-right: 25px;\">library-EXM105-FHIR3-7.0.0</td></tr><tr><th scope=\"row\"><b>Type: </b></th><td style=\"padding-right: 25px;\"> logic-library </td></tr><tr><th scope=\"row\"><b>Version: </b></th><td style=\"padding-left: 25px; padding-right: 25px;\">7.0.0</td></tr><tr><th scope=\"row\"><b>Status: </b></th><td style=\"padding-left: 25px; padding-right: 25px;\">active</td></tr><tr style=\"vertical-align: top;\"><th rowspan=\"4\" scope=\"row\"><b>Related: </b></th><td style=\"padding-left: 25px; padding-right: 25px;\"><p style=\"margin-bottom: 5px;\"><b>type: </b><span>depends-on</span></p><p style=\"margin-bottom: 5px;\"><b>Resource: </b><br/><span><span style=\"padding-left: 25px;\"><b>reference: </b><span>Library/library-FHIRHelpers-3.0.0</span></span></span></p></td></tr><tr style=\"vertical-align: top;\"><td style=\"padding-left: 25px; padding-right: 25px;\"><p style=\"margin-bottom: 5px;\"><b>type: </b><span>depends-on</span></p><p style=\"margin-bottom: 5px;\"><b>Resource: </b><br/><span><span style=\"padding-left: 25px;\"><b>reference: </b><span>Library/library-MATGlobalCommonFunctions-FHIR3-4.0.000</span></span></span></p></td></tr><tr style=\"vertical-align: top;\"><td style=\"padding-left: 25px; padding-right: 25px;\"><p style=\"margin-bottom: 5px;\"><b>type: </b><span>depends-on</span></p><p style=\"margin-bottom: 5px;\"><b>Resource: </b><br/><span><span style=\"padding-left: 25px;\"><b>reference: </b><span>Library/library-TJCOverall-FHIR3-3.6.000</span></span></span></p></td></tr><tr style=\"vertical-align: top;\"><td style=\"padding-left: 25px; padding-right: 25px;\"><p style=\"margin-bottom: 5px;\"><b>type: </b><span>depends-on</span></p><p style=\"margin-bottom: 5px;\"><b>Resource: </b><br/><span><span style=\"padding-left: 25px;\"><b>reference: </b><span>Library/library-SupplementalDataElements-FHIR3-1.0.0</span></span></span></p></td></tr><tr style=\"vertical-align: top;\"><th rowspan=\"8\" scope=\"row\"><b>Data Requirements: </b></th><td style=\"padding-left: 25px; padding-right: 25px;\"><div xmlns=\"http://www.w3.org/1999/xhtml\"><p style=\"margin-bottom: 5px;\"><b>type: </b><span>Encounter</span></p><p style=\"margin-bottom: 5px;\"><b>code filter:</b><br/><span style=\"padding-left: 25px;\"><b>path: </b><span>type</span></span><br/><span style=\"padding-left: 25px;\"><b>valueset: </b><span>http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.117.1.7.1.424</span></span></p></div></td></tr><tr style=\"vertical-align: top;\"><td style=\"padding-left: 25px; padding-right: 25px;\"><div xmlns=\"http://www.w3.org/1999/xhtml\"><p style=\"margin-bottom: 5px;\"><b>type: </b><span>Patient</span></p></div></td></tr><tr style=\"vertical-align: top;\"><td style=\"padding-left: 25px; padding-right: 25px;\"><div xmlns=\"http://www.w3.org/1999/xhtml\"><p style=\"margin-bottom: 5px;\"><b>type: </b><span>AllergyIntolerance</span></p><p style=\"margin-bottom: 5px;\"><b>code filter:</b><br/><span style=\"padding-left: 25px;\"><b>path: </b><span>code</span></span><br/><span style=\"padding-left: 25px;\"><b>valueset: </b><span>http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.117.1.7.1.423</span></span></p></div></td></tr><tr style=\"vertical-align: top;\"><td style=\"padding-left: 25px; padding-right: 25px;\"><div xmlns=\"http://www.w3.org/1999/xhtml\"><p style=\"margin-bottom: 5px;\"><b>type: </b><span>MedicationRequest</span></p></div></td></tr><tr style=\"vertical-align: top;\"><td style=\"padding-left: 25px; padding-right: 25px;\"><div xmlns=\"http://www.w3.org/1999/xhtml\"><p style=\"margin-bottom: 5px;\"><b>type: </b><span>MedicationRequest</span></p></div></td></tr><tr style=\"vertical-align: top;\"><td style=\"padding-left: 25px; padding-right: 25px;\"><div xmlns=\"http://www.w3.org/1999/xhtml\"><p style=\"margin-bottom: 5px;\"><b>type: </b><span>Observation</span></p><p style=\"margin-bottom: 5px;\"><b>code filter:</b><br/><span style=\"padding-left: 25px;\"><b>path: </b><span>code</span></span><br/><span style=\"padding-left: 25px;\"><b>valueset: </b><span>http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.117.1.7.1.215</span></span></p></div></td></tr><tr style=\"vertical-align: top;\"><td style=\"padding-left: 25px; padding-right: 25px;\"><div xmlns=\"http://www.w3.org/1999/xhtml\"><p style=\"margin-bottom: 5px;\"><b>type: </b><span>ProcedureRequest</span></p><p style=\"margin-bottom: 5px;\"><b>code filter:</b><br/><span style=\"padding-left: 25px;\"><b>path: </b><span>code</span></span><br/><span style=\"padding-left: 25px;\"><b>valueset: </b><span>http://cts.nlm.nih.gov/fhir/ValueSet/1.3.6.1.4.1.33895.1.3.0.45</span></span></p></div></td></tr><tr style=\"vertical-align: top;\"><td style=\"padding-left: 25px; padding-right: 25px;\"><div xmlns=\"http://www.w3.org/1999/xhtml\"><p style=\"margin-bottom: 5px;\"><b>type: </b><span>Procedure</span></p><p style=\"margin-bottom: 5px;\"><b>code filter:</b><br/><span style=\"padding-left: 25px;\"><b>path: </b><span>code</span></span><br/><span style=\"padding-left: 25px;\"><b>valueset: </b><span>http://cts.nlm.nih.gov/fhir/ValueSet/1.3.6.1.4.1.33895.1.3.0.45</span></span></p></div></td></tr><tr style=\"vertical-align: top;\"><th scope=\"row\"><b>Content: </b></th><td style=\"padding-left: 25px; padding-right: 25px;\"><b>type: </b><span>text/cql</span></td></tr><tr><td colspan=\"2\" style=\"padding-left: 25px; padding-right: 25px;\"><pre><code class=\"language-cql\">library EXM105_FHIR3 version '7.0.0'\n\n/*\nBased on CMS105v7 - Discharged on Statin Medication\n*/\n\nusing FHIR version '3.0.0'\n\ninclude FHIRHelpers version '3.0.0'\ninclude MATGlobalCommonFunctions_FHIR3 version '4.0.000' called Global\ninclude TJCOverall_FHIR3 version '3.6.000' called TJC\ninclude SupplementalDataElements_FHIR3 version '1.0.0' called SDE\n\ncodesystem \"LOINC\": 'http://loinc.org'\ncodesystem \"SNOMEDCT\": 'http://snomed.info/sct/731000124108'\ncodesystem \"Diagnosis Role\": 'http://hl7.org/fhir/diagnosis-role'\ncodesystem \"RequestIntent\": 'http://hl7.org/fhir/request-intent'\n\nvalueset \"Encounter Inpatient\": 'http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.666.5.307'\nvalueset \"Non-Elective Inpatient Encounter\": 'http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.117.1.7.1.424'\nvalueset \"Ischemic Stroke\": 'http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.117.1.7.1.247'\nvalueset \"Hemorrhagic Stroke\": 'http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.117.1.7.1.212'\nvalueset \"Comfort Measures\": 'http://cts.nlm.nih.gov/fhir/ValueSet/1.3.6.1.4.1.33895.1.3.0.45'\nvalueset \"Emergency Department Visit\": 'http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.117.1.7.1.292'\nvalueset \"Left Against Medical Advice\": 'http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.117.1.7.1.308'\nvalueset \"Discharged to Health Care Facility for Hospice Care\": 'http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.117.1.7.1.207'\nvalueset \"Patient Expired\": 'http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.117.1.7.1.309'\nvalueset \"Discharge To Acute Care Facility\": 'http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.117.1.7.1.87'\nvalueset \"Discharged to Home for Hospice Care\": 'http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.117.1.7.1.209'\nvalueset \"ONC Administrative Sex\": 'http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113762.1.4.1'\nvalueset \"Race\": 'http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.114222.4.11.836'\nvalueset \"Ethnicity\": 'http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.114222.4.11.837'\nvalueset \"Payer\": 'http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.114222.4.11.3591'\nvalueset \"LDL-c\": 'http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.117.1.7.1.215'\nvalueset \"Medical Reason\": 'http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.117.1.7.1.473'\nvalueset \"Patient Refusal\": 'http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.117.1.7.1.93'\nvalueset \"Statin Allergen\": 'http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.117.1.7.1.423'\nvalueset \"Statin Grouper\": 'http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113762.1.4.1110.19'\n\n// TODO: Use NLM VSAC Canonical URLs\ncode \"Birthdate\": '21112-8' from \"LOINC\" display 'Birth date'\ncode \"Dead\": '419099009' from \"SNOMEDCT\" display 'Dead'\n//code \"Medication-dischargeMedication\": '8654-6' from \"LOINC\" display 'Hospital Discharge medications'\n\ncode \"Billing\": 'billing' from \"Diagnosis Role\" display 'Billing'\ncode \"Order\": 'order' from \"RequestIntent\" display 'Order'\n\nparameter \"Measurement Period\" Interval&lt;DateTime&gt; default Interval[@2019-01-01T00:00:00.0, @2020-01-01T00:00:00.0)\n\ncontext Patient\n\ndefine \"Initial Population\":\n\t\"Encounter with Principal Diagnosis and Age\"\n\ndefine \"Encounter with Principal Diagnosis and Age\":\n\t\"All Stroke Encounter\" AllStrokeEncounter\n\t\twith [\"Patient\"] BirthDate\n\t\t\tsuch that AgeInYearsAt(AllStrokeEncounter.period.start) &gt;= 18\n\ndefine \"All Stroke Encounter\":\n\t\"Non Elective Inpatient Encounter\" NonElectiveEncounter\n\t\t/* where \"PrincipalDiagnosis\"(NonElectiveEncounter).code in \"Hemorrhagic Stroke\"\n\t\tor \"PrincipalDiagnosis\"(NonElectiveEncounter).code in \"Ischemic Stroke\" */\n\ndefine \"Non Elective Inpatient Encounter\":\n\t[\"Encounter\": \"Non-Elective Inpatient Encounter\"] NonElectiveEncounter\n\t\t//where \"LengthInDays\"(NonElectiveEncounter.period)&lt;= 120\n\t\twhere days between NonElectiveEncounter.period.\"start\" and NonElectiveEncounter.period.\"end\" &lt;= 120\n\t\t\tand NonElectiveEncounter.period ends during \"Measurement Period\"\n\n/* define function \"EncounterDiagnosis\"(Encounter Encounter):\n  Encounter.diagnosis D\n    return singleton from ([Condition: id in \"GetId\"(D.condition.reference)]) */\n\n/* define function \"PrincipalDiagnosis\"(Encounter Encounter):\n\t(singleton from (Encounter.diagnosis D where D.role ~ ToConcept(\"Billing\") and D.rank = 1)) PD\n\t\treturn singleton from ([Condition: id in \"GetId\"(PD.condition.reference)]) */\n\n/* define function \"LengthInDays\"(Value Interval&lt;DateTime&gt;):\n\tdifference in days between start of Value and end of Value\n\ndefine function \"GetId\"(uri String):\n\tLast(Split(uri, '/')) */\n\ndefine \"Denominator\":\n\tTJC.\"Ischemic Stroke Encounter\"\n\n//QA\ndefine \"Statin Allergy\":\n\t[\"AllergyIntolerance\": \"Statin Allergen\"]\n\ndefine \"Numerator\":\n\t\"Ischemic Stroke Encounter\" IschemicStrokeEncounter\n\t\twith \"Statin at Discharge\" DischargeStatin\n\t\t\tsuch that DischargeStatin.authoredOn during IschemicStrokeEncounter.period\n\ndefine \"Ischemic Stroke Encounter\":\n\t\"Encounter with Principal Diagnosis and Age\" EncounterWithAge\n\t\t//where PrincipalDiagnosis(EncounterWithAge).code in \"Ischemic Stroke\"\n\n//QA\ndefine \"Statin at Discharge\":\n\t[\"MedicationRequest\"] Statin\n\t\twhere (Statin.medication as CodeableConcept) in \"Statin Grouper\"\n\t\t\tand Statin.intent = 'order'\n\n//QA\ndefine \"Statin Not Given at Discharge\":\n\t[\"MedicationRequest\"] NoStatin\n\t\twhere (NoStatin.medication as CodeableConcept) in \"Statin Grouper\"\n\t\t\tand (singleton from NoStatin.reasonCode in \"Medical Reason\"\n\t\t\t\tor singleton from NoStatin.reasonCode in \"Patient Refusal\")\n\n//Folling function copied from MATGlobalCommonFunctions 2.0 in cqf-measures github repo\n/* define function \"Normalize Onset\"(onset Choice&lt;FHIR.dateTime, FHIR.Age, FHIR.Period, FHIR.Range, FHIR.string&gt;):\n\tif onset is FHIR.dateTime then Interval[onset.value, onset.value]\n\telse if onset is FHIR.Period then FHIRHelpers.ToInterval(onset as FHIR.Period)\n\telse null */\n\ndefine \"Encounter with Max LDL less than 70 mg per dL\":\n\t\"Ischemic Stroke Encounter\" IschemicStrokeEncounter\n\t\twhere Max([\"Observation\": \"LDL-c\"] Ldl\n\t\t\t\twhere Ldl.issued during Interval[IschemicStrokeEncounter.period.start - 30 days,IschemicStrokeEncounter.period.end]\n\t\t\t\treturn (Ldl.value as Quantity)\n\t\t) &lt; 70\n\ndefine \"Denominator Exception\":\n\t(\"Ischemic Stroke Encounter\" IschemicStrokeEncounter\n\t\twith \"Statin Not Given at Discharge\" NoDischargeStatin\n\t\t\tsuch that NoDischargeStatin.authoredOn during IschemicStrokeEncounter.period\n\t)\n\tunion\n\t(\"Ischemic Stroke Encounter\" IschemicStrokeEncounter )\n\t\t//with \"Statin Allergy\" StatinAllergy\n\t\t//\tsuch that \"Normalize Onset\"(StatinAllergy.onset) on or before end of FHIRHelpers.ToInterval(IschemicStrokeEncounter.period))\n\ndefine \"Denominator Exclusion\":\n\t\"Ischemic Stroke Encounters with Discharge Status\"\n\tunion\n\t\"Comfort Measures during Hospitalization\"\n\ndefine \"Ischemic Stroke Encounters with Discharge Status\":\n\t(\"Ischemic Stroke Encounter\" IschemicStrokeEncounter\n\t\twhere IschemicStrokeEncounter.hospitalization.dischargeDisposition in \"Discharge To Acute Care Facility\"\n\t\t\tor IschemicStrokeEncounter.hospitalization.dischargeDisposition in \"Left Against Medical Advice\"\n\t\t\tor IschemicStrokeEncounter.hospitalization.dischargeDisposition in \"Patient Expired\"\n\t\t\tor IschemicStrokeEncounter.hospitalization.dischargeDisposition in \"Discharged to Home for Hospice Care\"\n\t\t\tor IschemicStrokeEncounter.hospitalization.dischargeDisposition in \"Discharged to Health Care Facility for Hospice Care\"\n\t)\n\n//QA\ndefine \"Comfort Measures during Hospitalization\":\n\t\"Ischemic Stroke Encounter\" IschemicStrokeEncounter\n\t\twith \"Intervention Comfort Measures\" ComfortMeasure\n\t\t\tsuch that ComfortMeasure.authoredOn during Global.\"Hospitalization\"(IschemicStrokeEncounter)\n\n/*\ndefine \"Intervention Comfort Measures\":\n\t([\"ProcedureRequest\": \"Comfort Measures\"] P\n\t\twhere P.intent = 'order')\n\t\tunion [\"Procedure\": \"Comfort Measures\"]\n*/\n\n//QA\ndefine \"Intervention Comfort Measures\":\n\t([\"ProcedureRequest\": \"Comfort Measures\"] P\n\t\twhere P.intent = 'order')\n\t\tunion\n\t\t([\"Procedure\": \"Comfort Measures\"] IntervetionPerformed\n\t\twhere IntervetionPerformed.status = 'completed')\n</code></pre>\r\n                    \r\n                    \r\n                </td>\r\n            </tr>\r\n        \r\n    </table>\r\n</div>"
  },
  "version": "7.0.0",
  "name": "EXM105_FHIR3",
  "status": "active",
  "experimental": true,
  "type": {
    "coding": [
      {
        "system": "http://hl7.org/fhir/codesystem-library-type.html",
        "code": "logic-library"
      }
    ]
  },
  "relatedArtifact": [
    {
      "type": "depends-on",
      "resource": {
        "reference": "Library/library-FHIRHelpers-3.0.0"
      }
    },
    {
      "type": "depends-on",
      "resource": {
        "reference": "Library/library-MATGlobalCommonFunctions-FHIR3-4.0.000"
      }
    },
    {
      "type": "depends-on",
      "resource": {
        "reference": "Library/library-TJCOverall-FHIR3-3.6.000"
      }
    },
    {
      "type": "depends-on",
      "resource": {
        "reference": "Library/library-SupplementalDataElements-FHIR3-1.0.0"
      }
    }
  ],
  "dataRequirement": [
    {
      "type": "Encounter",
      "codeFilter": [
        {
          "path": "type",
          "valueSetString": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.117.1.7.1.424"
        }
      ]
    },
    {
      "type": "Patient"
    },
    {
      "type": "AllergyIntolerance",
      "codeFilter": [
        {
          "path": "code",
          "valueSetString": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.117.1.7.1.423"
        }
      ]
    },
    {
      "type": "MedicationRequest"
    },
    {
      "type": "MedicationRequest"
    },
    {
      "type": "Observation",
      "codeFilter": [
        {
          "path": "code",
          "valueSetString": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.117.1.7.1.215"
        }
      ]
    },
    {
      "type": "ProcedureRequest",
      "codeFilter": [
        {
          "path": "code",
          "valueSetString": "http://cts.nlm.nih.gov/fhir/ValueSet/1.3.6.1.4.1.33895.1.3.0.45"
        }
      ]
    },
    {
      "type": "Procedure",
      "codeFilter": [
        {
          "path": "code",
          "valueSetString": "http://cts.nlm.nih.gov/fhir/ValueSet/1.3.6.1.4.1.33895.1.3.0.45"
        }
      ]
    }
  ],
  "content": [
    {
      "contentType": "application/elm+xml",
      "data": ""
    },
    {
      "contentType": "text/cql",
      "data": ""
    }
  ]
}